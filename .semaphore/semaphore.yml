version: v1.0
name: Initial Pipeline
agent:
  machine:
    type: s1-kubernetes
    os_image: ''
  containers:
    - name: main
      image: 'registry.semaphoreci.com/python:3.12.1'
global_job_config:
  prologue:
    commands:
      - checkout
      - cache restore
      - export REDIS_PORT=6379
      - 'echo "Redis Host: $REDIS_HOST"'
      - 'echo "Redis Port: $REDIS_PORT"'
blocks:
  - name: Dependencies
    task:
      jobs:
        - name: pip download
          commands:
            - pip download --cache-dir .pip_cache -r requirements.txt
            - cache store
  - name: Fast tests
    task:
      jobs:
        - name: Unit tests
          commands:
            - python tests/units.py
        - name: pylint
          commands:
            - pylint src/*
        - name: pip-audit
          commands:
            - pip-audit -r requirements.txt
        - name: bandit
          commands:
            - bandit -r src/*
      prologue:
        commands:
          - pip install --cache-dir .pip_cache -r requirements.txt
  - name: Slow tests
    task:
      prologue:
        commands:
          - pip install --cache-dir .pip_cache -r requirements.txt
      agent:
        machine:
          type: s1-kubernetes
          os_image: ''
        containers:
          - name: main
            image: 'registry.semaphoreci.com/python:3.12.1'
          - name: redis
            image: 'redis:alpine'
      jobs:
        - name: Integration tests
          commands:
            - python tests/integrations.py
  - name: Chain supply
    task:
      jobs:
        - name: Sign app.py
          commands:
            - gpg --import /root/public.key
            - gpg --import /root/private.key
            - gpg --output signature.sig --detach-sign src/app.py
            - gpg --verify signature.sig src/app.py
            - artifact push workflow --force signature.sig
        - name: Generate SBOM
          commands:
            - cyclonedx-py requirements -o sbom.json
            - artifact push workflow --force sbom.json
      secrets:
        - name: gpg-keys
      prologue:
        commands:
          - pip install --cache-dir .pip_cache -r requirements.txt
